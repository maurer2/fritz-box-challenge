// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UpdateBar should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateView
    isUpdating={true}
    isValid={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <CSSTransitionGroup
        component={Symbol(react.fragment)}
        transitionAppear={true}
        transitionAppearTimeout={500}
        transitionEnter={false}
        transitionEnterTimeout={0}
        transitionLeave={true}
        transitionLeaveTimeout={500}
        transitionName="slide-vertically"
      >
        <ForwardRef>
          <React.Fragment>
            Updating!
          </React.Fragment>
        </ForwardRef>
      </CSSTransitionGroup>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ForwardRef>
          <React.Fragment>
            Updating!
          </React.Fragment>
        </ForwardRef>,
        "component": Symbol(react.fragment),
        "transitionAppear": true,
        "transitionAppearTimeout": 500,
        "transitionEnter": false,
        "transitionEnterTimeout": 0,
        "transitionLeave": true,
        "transitionLeaveTimeout": 500,
        "transitionName": "slide-vertically",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <React.Fragment>
              Updating!
            </React.Fragment>,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Updating!",
            },
            "ref": null,
            "rendered": "Updating!",
            "type": Symbol(react.fragment),
          },
          false,
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Text-lwqm3z-0",
            "isStatic": true,
            "rules": Array [
              "padding:1rem;text-align:center;font-size:1rem;background:gray;",
            ],
          },
          "displayName": "Text",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Text-lwqm3z-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "SlideYTransition-lwqm3z-1",
        "isStatic": true,
        "rules": Array [
          "position:absolute;top:0;left:0;right:0;> .slide-vertically-appear{transform:translateY(-100%);transition:transform 500ms ease-out;&.slide-vertically-appear-active{transform:translateY(0);}}> .slide-vertically-leave{transform:translateY(0);transition:transform 500ms ease-in;&.slide-vertically-leave-active{transform:translateY(-100%);}}",
        ],
      },
      "displayName": "SlideYTransition",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "SlideYTransition-lwqm3z-1",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <CSSTransitionGroup
          component={Symbol(react.fragment)}
          transitionAppear={true}
          transitionAppearTimeout={500}
          transitionEnter={false}
          transitionEnterTimeout={0}
          transitionLeave={true}
          transitionLeaveTimeout={500}
          transitionName="slide-vertically"
        >
          <ForwardRef>
            <React.Fragment>
              Updating!
            </React.Fragment>
          </ForwardRef>
        </CSSTransitionGroup>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ForwardRef>
            <React.Fragment>
              Updating!
            </React.Fragment>
          </ForwardRef>,
          "component": Symbol(react.fragment),
          "transitionAppear": true,
          "transitionAppearTimeout": 500,
          "transitionEnter": false,
          "transitionEnterTimeout": 0,
          "transitionLeave": true,
          "transitionLeaveTimeout": 500,
          "transitionName": "slide-vertically",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <React.Fragment>
                Updating!
              </React.Fragment>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Updating!",
              },
              "ref": null,
              "rendered": "Updating!",
              "type": Symbol(react.fragment),
            },
            false,
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Text-lwqm3z-0",
              "isStatic": true,
              "rules": Array [
                "padding:1rem;text-align:center;font-size:1rem;background:gray;",
              ],
            },
            "displayName": "Text",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Text-lwqm3z-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "SlideYTransition-lwqm3z-1",
          "isStatic": true,
          "rules": Array [
            "position:absolute;top:0;left:0;right:0;> .slide-vertically-appear{transform:translateY(-100%);transition:transform 500ms ease-out;&.slide-vertically-appear-active{transform:translateY(0);}}> .slide-vertically-leave{transform:translateY(0);transition:transform 500ms ease-in;&.slide-vertically-leave-active{transform:translateY(-100%);}}",
          ],
        },
        "displayName": "SlideYTransition",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "SlideYTransition-lwqm3z-1",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateBar should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateView
    isUpdating={false}
    isValid={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <CSSTransitionGroup
        component={Symbol(react.fragment)}
        transitionAppear={true}
        transitionAppearTimeout={500}
        transitionEnter={false}
        transitionEnterTimeout={0}
        transitionLeave={true}
        transitionLeaveTimeout={500}
        transitionName="slide-vertically"
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": false,
        "component": Symbol(react.fragment),
        "transitionAppear": true,
        "transitionAppearTimeout": 500,
        "transitionEnter": false,
        "transitionEnterTimeout": 0,
        "transitionLeave": true,
        "transitionLeaveTimeout": 500,
        "transitionName": "slide-vertically",
      },
      "ref": null,
      "rendered": false,
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "SlideYTransition-lwqm3z-1",
        "isStatic": true,
        "rules": Array [
          "position:absolute;top:0;left:0;right:0;> .slide-vertically-appear{transform:translateY(-100%);transition:transform 500ms ease-out;&.slide-vertically-appear-active{transform:translateY(0);}}> .slide-vertically-leave{transform:translateY(0);transition:transform 500ms ease-in;&.slide-vertically-leave-active{transform:translateY(-100%);}}",
        ],
      },
      "displayName": "SlideYTransition",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "SlideYTransition-lwqm3z-1",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <CSSTransitionGroup
          component={Symbol(react.fragment)}
          transitionAppear={true}
          transitionAppearTimeout={500}
          transitionEnter={false}
          transitionEnterTimeout={0}
          transitionLeave={true}
          transitionLeaveTimeout={500}
          transitionName="slide-vertically"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": false,
          "component": Symbol(react.fragment),
          "transitionAppear": true,
          "transitionAppearTimeout": 500,
          "transitionEnter": false,
          "transitionEnterTimeout": 0,
          "transitionLeave": true,
          "transitionLeaveTimeout": 500,
          "transitionName": "slide-vertically",
        },
        "ref": null,
        "rendered": false,
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "SlideYTransition-lwqm3z-1",
          "isStatic": true,
          "rules": Array [
            "position:absolute;top:0;left:0;right:0;> .slide-vertically-appear{transform:translateY(-100%);transition:transform 500ms ease-out;&.slide-vertically-appear-active{transform:translateY(0);}}> .slide-vertically-leave{transform:translateY(0);transition:transform 500ms ease-in;&.slide-vertically-leave-active{transform:translateY(-100%);}}",
          ],
        },
        "displayName": "SlideYTransition",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "SlideYTransition-lwqm3z-1",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
