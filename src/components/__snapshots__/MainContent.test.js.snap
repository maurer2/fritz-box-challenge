// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainContent should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainContent
    isUpdating={false}
    onClick={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <CSSTransitionGroup
        component={Symbol(react.fragment)}
        transitionAppear={true}
        transitionAppearTimeout={1000}
        transitionEnter={true}
        transitionEnterTimeout={500}
        transitionLeave={true}
        transitionLeaveTimeout={500}
        transitionName="slide"
      />,
      "onClick": undefined,
      "transitionName": "slide",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": undefined,
        "component": Symbol(react.fragment),
        "transitionAppear": true,
        "transitionAppearTimeout": 1000,
        "transitionEnter": true,
        "transitionEnterTimeout": 500,
        "transitionLeave": true,
        "transitionLeaveTimeout": 500,
        "transitionName": "slide",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "MainWrapper-sc-1d2488w-0",
        "isStatic": false,
        "rules": Array [
          "width:100%;> div{position:absolute;top:50%;left:0;right:0;transform:translateX(0) translateY(-50%);}> .",
          [Function],
          "-leave{opacity:1;transform:translateX(0) translateY(-50%);transition:transform 500ms,opacity 500ms;&.",
          [Function],
          "-leave-active{opacity:0.01;transform:translateX(-100%) translateY(-50%);}}> .",
          [Function],
          "-enter{opacity:0.01;transform:translateX(100%) translateY(-50%);transition:transform 500ms,opacity 500ms;&.",
          [Function],
          "-enter-active{opacity:1;transform:translateX(0) translateY(-50%);}}> .",
          [Function],
          "-appear{opacity:0.01;transition:opacity 1000ms;&.",
          [Function],
          "-appear-active{opacity:1;}}",
        ],
      },
      "displayName": "MainWrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "MainWrapper-sc-1d2488w-0",
      "target": "main",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <CSSTransitionGroup
          component={Symbol(react.fragment)}
          transitionAppear={true}
          transitionAppearTimeout={1000}
          transitionEnter={true}
          transitionEnterTimeout={500}
          transitionLeave={true}
          transitionLeaveTimeout={500}
          transitionName="slide"
        />,
        "onClick": undefined,
        "transitionName": "slide",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "component": Symbol(react.fragment),
          "transitionAppear": true,
          "transitionAppearTimeout": 1000,
          "transitionEnter": true,
          "transitionEnterTimeout": 500,
          "transitionLeave": true,
          "transitionLeaveTimeout": 500,
          "transitionName": "slide",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "MainWrapper-sc-1d2488w-0",
          "isStatic": false,
          "rules": Array [
            "width:100%;> div{position:absolute;top:50%;left:0;right:0;transform:translateX(0) translateY(-50%);}> .",
            [Function],
            "-leave{opacity:1;transform:translateX(0) translateY(-50%);transition:transform 500ms,opacity 500ms;&.",
            [Function],
            "-leave-active{opacity:0.01;transform:translateX(-100%) translateY(-50%);}}> .",
            [Function],
            "-enter{opacity:0.01;transform:translateX(100%) translateY(-50%);transition:transform 500ms,opacity 500ms;&.",
            [Function],
            "-enter-active{opacity:1;transform:translateX(0) translateY(-50%);}}> .",
            [Function],
            "-appear{opacity:0.01;transition:opacity 1000ms;&.",
            [Function],
            "-appear-active{opacity:1;}}",
          ],
        },
        "displayName": "MainWrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "MainWrapper-sc-1d2488w-0",
        "target": "main",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
